<?php
namespace Phossa\Query;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-12-04 at 02:56:16.
 */
class QueryBuilderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var QueryBuilder
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new QueryBuilder();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Phossa\Query\QueryBuilder::getStatement
     */
    public function testGetStatement()
    {
        // simple
        $this->object->select()->from('users');
        $this->assertEquals(
            "SELECT * FROM `users`",
            $this->object->getStatement()
        );

        // different dialect
        $this->assertEquals(
            'SELECT * FROM "users"',
            $this->object->getStatement([], new Dialect\Common())
        );

        // change output settings
        $this->assertEquals(
            'SELECT
  *
FROM
  `users`',
            $this->object->getStatement([
                'seperator' => "\n",
                'indent'    => "  ",
            ])
        );

    }

    /**
     * @covers Phossa\Query\QueryBuilder::getBindings
     * @todo   Implement testGetBindings().
     */
    public function testGetBindings()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Phossa\Query\QueryBuilder::__toString
     */
    public function testtoString()
    {
        $this->object->select()->from('users');

        $this->assertEquals(
            "SELECT * FROM `users`",
            (string) $this->object
        );
    }

    /**
     * @covers Phossa\Query\QueryBuilder::select
     */
    public function testSelect()
    {
        $this->object->select()->from('users');
        $this->assertEquals(
            "SELECT * FROM `users`",
            $this->object->getStatement()
        );
    }

    /**
     * @covers Phossa\Query\QueryBuilder::setConfigs
     */
    public function testSetConfigs()
    {
        $this->object->select()->from('users');

        // set autoquote off
        $this->object->setConfigs([ 'autoQuote' => false]);
        $this->assertEquals(
            "SELECT * FROM users",
            $this->object->getStatement()
        );
    }

    /**
     * @covers Phossa\Query\QueryBuilder::getConfigs
     */
    public function testGetConfigs()
    {
        $a = $this->object->getConfigs();
        $this->assertArrayHasKey('autoQuote', $a);
    }

    /**
     * @covers Phossa\Query\QueryBuilder::setDialect
     */
    public function testSetDialect()
    {
        $dialect = new Dialect\Common();
        $this->object->setDialect($dialect);

        $this->object->select()->from('users');
        $this->assertEquals(
            'SELECT * FROM "users"',
            $this->object->getStatement()
        );
    }

    /**
     * @covers Phossa\Query\QueryBuilder::getDialect
     */
    public function testGetDialect()
    {
        // default dialect
        $a = $this->object->getDialect();
        $this->assertInstanceOf(
            '\Phossa\Query\Dialect\Mysql',
            $this->object->getDialect()
        );

        // set & get
        $c = new Dialect\Common();
        $this->object->setDialect($c);
        $this->assertEquals($c, $this->object->getDialect());
    }

    /**
     * @covers Phossa\Query\QueryBuilder::warning
     * @todo   Implement testWarning().
     */
    public function testWarning()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Phossa\Query\QueryBuilder::setLogger
     * @todo   Implement testSetLogger().
     */
    public function testSetLogger()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
